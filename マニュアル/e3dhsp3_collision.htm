<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=Shift_JIS">
<META name="GENERATOR" content="IBM WebSphere Studio Homepage Builder Version 11.0.0.0 for Windows">
<META http-equiv="Content-Style-Type" content="text/css">
<TITLE></TITLE>
</HEAD>
<BODY>
<P><FONT size="+2"><B>当たり判定について</B></FONT><BR>
<BR>
ver3.0.0.1から当たり判定の方式が変わりました。<BR>
結論から言うと、精度が上がりました。<BR>
ですが、気をつけないと処理速度が遅くなる場合があります。<BR>
<BR>
以下は詳細です。<BR>
<BR>
旧バージョンでは、パーツごとに、座標軸対して傾いていないボックスを作成し、判定計算をしていましたが、<BR>
ver3.0.0.1からは、下図のように、座標軸に対して傾いたボックスを使用します。<BR>
<BR>
<IMG src="jpegfiles/bbox2.jpg" width="666" height="389" border="0"><BR>
<BR>
旧バージョンは、パーツ１個に対し１個ボックスを作成していましたが、<BR>
新しいバージョンでは、パーツとボーンの組に対して１個のボックスを作成します。<BR>
座標軸に対して傾いたボックスと書きましたが、ボーンの軸を基準にして傾いたボックスを作成します。<BR>
ボーンの無いモデルデータに対しては、座標軸に対して傾いていないボックスが使用されます。<BR>
<BR>
つまり、<B>ボーンを入れていないモデルデータより、ボーンを入れたモデルデータのほうが、</B><BR>
ボックスの数も多くなり、ボーンの傾きを考慮することで、よりフィットした形状を作れるので、<BR>
<B>精度が上がることになります。</B><BR>
<BR>
<BR>
E3DChkConflictは、従来どおりのモデルデータ全体を囲むようなボックス１つで判定します。<BR>
高速ですが、粗い判定となります。<BR>
<BR>
E3DChkConflict2, E3DChkConflict3では、パーツ単位で関数を呼び出しますが、<BR>
内部的には、更に細かいボーン単位で判定計算が行われます。<BR>
<BR>
つまり、<B>モデルデータ全体同士の判定をする場合でも、</B><BR>E3DChkConflict hsid1, hsid2, confflag, inviewflag とするよりも、<BR>
<B>E3DChkConflict2 hsid1, -1, hsid2, -1, confflag, inviewflag<BR>
としたほうが、計算精度がアップします。</B><BR>
<BR>
E3DChkConflict2, E3DChkConflict3は、精度が高いですが、気をつけないと処理速度が遅くなる場合があります。<BR>
この２つの関数は、モデルデータ同士が、ぎりぎり当たらないくらいの距離にいるときに、一番遅くなります。<BR>
遅くなる度合いは、ボーンの数にもよりますが、ボーンの数が１００を超えるモデル同士が、近距離で向かい合った場合は、<BR>
FPSに影響するくらい遅くなる場合があります。<BR>
そうした現象が見られる場合には、モデルデータがぶつかった場合に、ある程度モデルデータ同士を遠ざけるなどして、<BR>
なるべく近距離でじっとしないような工夫をしてください。<BR>
<BR>
<BR>
精度以外にも大きな変更点があります。<BR>
旧バージョンでは、<B>当たり判定に使用するデータは、</B>E3DRenderで計算していましたが、<BR>
新しいバージョンでは、<B>E3DChkInViewで計算します</B>。<BR>
これにより、当たり判定と描画が１フレームずれてしまうという不具合が解消されました。<BR>
<BR>
ただし、気をつけてもらいたいのは、ビルボードの当たり判定です。<BR>
ビルボードには、E3DChkInViewがないため、従来どおり、当たり判定用のデータは、E3DRenderBillboardで計算されます。<BR>
ですので、ビルボードの当たり判定は、E3DRenderBillboardより後ろに持ってくるのが好ましいです。<BR>
<BR>
旧バージョンの当たり判定の弱点として、<BR>
モデルデータが視野外にあるときには、当たり判定が機能しない、という問題がありましたが、<BR>
新しいバージョンでは、<B>モデルデータが視野外にあるときでも、当たり判定は機能します</B>。<BR>
<BR>
<B>Win32版ではE3DChkConflictはE3DChkConflictAABB、<BR>
E3DChkConflict2はE3DChkConflictOBBという名前です。<BR>
</B><BR>
<BR>
<A href="index.htm">トップページに戻る</A><BR>
<BR>
<BR>
<BR>
</P>
</BODY>
</HTML>